"use strict";var __importDefault=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.translateCommand=exports.CommandWithAdmin=exports.CommandWithClientServer=exports.CommandWithClient=exports.Command=exports.BaseCommand=void 0;const builders_1=require("@discordjs/builders"),lodash_1=__importDefault(require("lodash"));class BaseCommand extends builders_1.SlashCommandBuilder{constructor(){super(),this.permNameAdmin="user",this.permNameClient="user",this.usingPteroApi=!1,this.usingPteroAdminApi=!1,this.category="miscelaneous",this.ephemeral=!0,this.getPermName=t=>t?this.permNameAdmin:this.permNameClient,this.getPermLevel=(t,e)=>t.levelCache[this.getPermName(e)],this.setPreRun=t=>(this.preRun=t,this),this.setRun=t=>(this.run=t,this),this.setSetup=t=>(this.setup=t,this),this.setNotEphemeral=()=>(this.ephemeral=!this.ephemeral,this),this.setPermNameAdmin=t=>(this.permNameAdmin=t,this),this.setPermNameClient=t=>(this.permNameClient=t,this),this.setCategory=t=>(this.category=t,this),this.setClient=()=>(this.usingPteroApi=!this.usingPteroApi,this.usingPteroAdminApi=!1,this),this.setAdmin=()=>(this.usingPteroAdminApi=!this.usingPteroAdminApi,this.usingPteroApi=!1,this)}}exports.BaseCommand=BaseCommand;class Command extends BaseCommand{constructor(){super(...arguments),this.setRun=t=>(this.run=t,this),this.preRun=t=>this.run(t)}}exports.Command=Command;class CommandWithClient extends BaseCommand{constructor(){super(),this.setRun=t=>(this.run=t,this),this.preRun=(t,{client:e})=>this.run({...t,client:e}),this.setClient(),this.setPermNameClient("administrator")}}exports.CommandWithClient=CommandWithClient;class CommandWithClientServer extends BaseCommand{constructor(){super(),this.setRun=t=>(this.run=t,this),this.preRun=async(t,{client:e})=>{const{bot:s,interaction:i,settings:n,adminUser:r}=t,a=await s.functions.getServerBySearch(i,n,e,r);if(a)return a.is_suspended?await s.functions.handleError(i,n,new Error(s.t("errors.server_susp"))):void this.run(a,{...t,client:e}).catch((t=>s.functions.handleError(i,n,t)))},this.setClient(),this.setPermNameClient("administrator"),this.addStringOption((t=>t.setName("search").setDescription("common.search_server_*").setRequired(!0)))}}exports.CommandWithClientServer=CommandWithClientServer;class CommandWithAdmin extends BaseCommand{constructor(){super(),this.setRun=t=>(this.run=t,this),this.preRun=(t,{client:e,app:s})=>this.run({...t,client:e,app:s}),this.setAdmin(),this.setPermNameAdmin("administrator"),this.setPermNameClient("unavailable")}}exports.CommandWithAdmin=CommandWithAdmin;const translateOpts=(t,e)=>{Object.keys(e).forEach((s=>{const i=e[s];"object"==typeof i?translateOpts(t,i):"description"===s&&(e[s]=t.t(i))}))},translateCommand=(t,e)=>{const s=lodash_1.default.cloneDeep(e);return s.setDescription(t.t(s.description)),s.options.length>0&&s.options.forEach((e=>{translateOpts(t,e)})),s};exports.translateCommand=translateCommand;