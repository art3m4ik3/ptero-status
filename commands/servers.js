"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.cmd=void 0;const discord_js_1=require("discord.js"),powerButtons_1=require("../buttons/powerButtons"),Command_1=require("../classes/Command"),console_1=require("../embeds/console"),server_1=require("../embeds/server"),sendCommand_1=require("../modals/sendCommand"),run=async({bot:e,client:t,settings:s,interaction:a,adminUser:r})=>{const o=a.options.getString("search"),i=await t.getAllServers({egg:!0,subusers:!0},o?{filter:o,filterBy:"*"}:void 0,r);if(0===i.length)return e.functions.handleNoResult(a,s,e.t("not_found.server"));const n=await Promise.all(i.map((async({attributes:a},r)=>{let o,n;if(0===r||1===r||r===i.length-1)try{o=await t.getServerResources(a.identifier),n=await t.getAllBackups(a.identifier)}catch(e){}return(0,server_1.makeServerEmbed)(e,s,a,n,o)}))),d=new discord_js_1.ButtonBuilder({customId:"createBackup",style:discord_js_1.ButtonStyle.Success}).setLabel(e.t("backups.create")),c=new discord_js_1.ButtonBuilder({customId:"sendCmd",style:discord_js_1.ButtonStyle.Primary}).setLabel(e.t("servers.send_command")),u=new discord_js_1.ButtonBuilder({customId:"console",style:discord_js_1.ButtonStyle.Success}).setLabel(e.t("servers.console")),m=(new discord_js_1.ActionRowBuilder).addComponents([d,c,u]),l=(0,powerButtons_1.powerButtonRow)(e);await e.pagination.paginate(a,n,[m,l],(async({value:r},o,{refreshEmbed:d})=>{try{const c=async(a,r=!1)=>{let o,d,c=i[a].attributes;if(r&&(c=await t.getServerInfo(i[a].attributes.identifier,{egg:!0,subusers:!0})),!c.is_suspended)try{o=await t.getServerResources(c.identifier),d=await t.getAllBackups(c.identifier)}catch(e){}n[a]=(0,server_1.makeServerEmbed)(e,s,c,d,o)};switch(o.customId){case"refresh":await c(r,!0),await d(o);break;case"sendCmd":{const n=(0,sendCommand_1.makeSendCommandModal)(e);o.showModal(n);const d=async e=>a.member?.user.id===e.member?.user.id&&"sendCmdModal"===e.customId,c=await o.awaitModalSubmit({time:12e4,filter:d});if(c){await c.deferReply({ephemeral:!0});const a=c.fields.getTextInputValue("command");try{const o=await e.functions.getConsole(t,i[r].attributes.identifier,a,5);await c.editReply({embeds:[(0,console_1.makeConsoleEmbed)(e,s,i[r].attributes,o,{limit:5,title:e.t("common.cmd_sent")})]})}catch(t){await e.functions.handleError(c,s,t,!0)}}break}case"console":{const o=await e.functions.getConsole(t,i[r].attributes.identifier);await a.followUp({embeds:[(0,console_1.makeConsoleEmbed)(e,s,i[r].attributes,o,{title:e.t("servers.console_no_update")})],ephemeral:!0});break}case"createBackup":{const o=await t.createBackup(i[r].attributes.identifier);await a.followUp({embeds:[e.embed({title:e.t("servers.backup_created"),description:o.name},{settings:s})],ephemeral:!0});break}case"start":case"stop":case"restart":case"kill":await t.setPowerState(i[r].attributes.identifier,o.customId);break;case"next":case"back":await e.pagination.updateNextBack(c,o.customId,r,n.length)}}catch(t){await e.functions.handleError(a,s,t,!0)}}),(e=>"start"===e.customId||"restart"===e.customId||"stop"===e.customId||"kill"===e.customId||"createBackup"===e.customId||"sendCmd"===e.customId||"console"===e.customId),!0,void 0,(e=>"sendCmd"===e.customId))};exports.cmd=(new Command_1.CommandWithClient).setName("servers").setDescription("servers.main").setCategory("pterodactyl").setRun(run).addStringOption((e=>e.setName("search").setDescription("common.search_server_*")));