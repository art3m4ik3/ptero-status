"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.run=void 0;const url_1=require("url"),ws_1=require("ws"),liveNode_1=require("../embeds/liveNode"),LiveGraph_1=__importDefault(require("../modules/LiveGraph")),discord_js_1=require("discord.js"),isHard=(e,t)=>"hard"===e,isUsed=(e,t)=>"used"===e,isShut=(e,t)=>"shutdown"===e,run=(e,t,r)=>{const s=new ws_1.WebSocketServer({noServer:!0}),n=new LiveGraph_1.default;s.on("connection",(t=>{t.on("close",(()=>{t.emit("message",JSON.stringify({token:t.token,type:"shutdown"}))})),t.on("message",(async r=>{const s=e=>{t.send(JSON.stringify(e)),t.close()};try{const i=JSON.parse(r.toString()),{token:a,type:o,...d}=i;if(!a)return s({error:"Missing token"});if(!o)return s({error:"Missing type"});const u=e.liveNodes.get(a);if(!u)return s({error:"Invalid token"});const l=e.functions.getSettingsById(u.guildId);t.token||(t.token=a);const c=await e.discordClient.guilds.fetch(u.guildId).catch((()=>null));if(!c)return s({error:"Guild not found"});const h=await c.channels.fetch(u.channelId).catch((()=>null));if(!h)return s({error:"Channel not found"});if(h.type!==discord_js_1.ChannelType.GuildText)return s({error:"Channel not text"});const f=await h.messages.fetch(u.messageId).catch((()=>null));if(!f)return s({error:"Message not found"});let m=!1;isHard(o)?(e.liveNodes.set(a,d,"systemHardData"),u.systemHardData=d):isUsed(o)?(u.systemData.push(d),u.systemData.length>20&&u.systemData.shift(),e.liveNodes.set(a,u.systemData,"systemData")):isShut(o)&&(e.liveNodes.delete(a),m=!0,t.close());const p=(0,liveNode_1.makeLiveNodeEmbed)(e,l,u,m),g=await n.createLiveGraph(u,l);await f.edit({embeds:[p],files:[{attachment:g,name:"graph.png"}]}),e.logger.cmd(`${c.name} (${c.id}) live node update for ${u.name} at ${(new Date).toLocaleString()}`)}catch(e){return s({error:"Internal server error"})}}))})),r.on("upgrade",(async(t,r,n)=>{const{pathname:i}=(0,url_1.parse)(t.url);if("/live/ws"===i){if(!t.headers.authorization)return r.end("401 No authorization token","ascii");const i=t.headers.authorization.split(" ")[1],a=e.liveNodeCache[i];if(!a)return r.end("401 Invalid Token","ascii");e.liveNodes.set(i,{...a,systemData:[],systemHardData:null}),s.handleUpgrade(t,r,n,(e=>s.emit("connection",e,t)))}else r.end("404 Not Found","ascii")}))};exports.run=run;