"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.cmd=void 0;const Command_1=require("../classes/Command"),uuid_apikey_1=__importDefault(require("uuid-apikey")),discord_js_1=require("discord.js"),run=async({bot:e,settings:t,interaction:i,client:n})=>{const s=i.options.getSubcommand(),d=i.options.getString("name",!0);if(i.guildId)if("setup"===s){const s=i.options.getChannel("channel",!0);if(s.type!==discord_js_1.ChannelType.GuildText)return e.functions.handleError(i,t,new Error("Channel must be a text channel"));const o={name:d,channelId:s.id,token:uuid_apikey_1.default.create({noDashes:!0}).apiKey,messageId:""};let a=`FQDN:${e.config.serverPort}`;try{const t=await n.getServerInfo(e.config.botServerUUID),i=t.relationships.allocations.data.find((e=>!0===e.attributes.is_default))?.attributes;a=`${i?.ip_alias??i?.ip??"FQDN"}:${e.config.serverPort}`}catch(e){}const r=await s.send({embeds:[e.embed({title:d,description:"Set up livenode"},{settings:t})]});o.messageId=r.id,e.settings.set(i.guildId,t.liveNodes,"liveNodes"),e.settings.push(i.guildId,o,"liveNodes"),e.updateLiveNodeCache(e.discordClient.guilds.cache.map((e=>e))),await i.editReply({embeds:[e.embed({title:"Live Node config",description:"Run this in server ssh\n```livenode --config "+o.token+" "+a+"```"},{settings:t})]})}else if("delete"===s){if(0===t.liveNodes.length)return void await i.editReply({embeds:[e.embed({title:"No live nodes set up"},{settings:t})]});const n=t.liveNodes.find((e=>e.name===d));if(!n)return void await i.editReply({embeds:[e.embed({title:`Live Node with name ${d} not found.`},{settings:t})]});const s=t.liveNodes.indexOf(n);t.liveNodes.splice(s,1),e.settings.set(i.guildId,t),e.liveNodes.delete(n.token),e.updateLiveNodeCache(e.discordClient.guilds.cache.map((e=>e))),i.editReply({embeds:[e.embed({title:`Live Node ${d} deleted`},{settings:t})]})}};exports.cmd=(new Command_1.CommandWithAdmin).setName("livenode").setDescription("Manage live nodes").setPermNameClient("administrator").setRun(run).addSubcommand((e=>e.setName("setup").setDescription("Setup live node").addStringOption((e=>e.setName("name").setDescription("Live node name").setRequired(!0))).addChannelOption((e=>e.setName("channel").setDescription("Live node channel").setRequired(!0))))).addSubcommand((e=>e.setName("delete").setDescription("Delete live node").addStringOption((e=>e.setName("name").setDescription("Live node name").setRequired(!0)))));