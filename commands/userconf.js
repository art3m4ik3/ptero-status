"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.cmd=void 0;const jspteroapi_1=require("jspteroapi"),Command_1=require("../classes/Command"),run=async({interaction:e,settings:t,bot:s,adminUser:i})=>{if(i)return void await e.editReply({embeds:[s.embed({title:s.t("userconf.admin")},{settings:t})]});const n=e.options.getString("token");if(n){if(n){const i=await new jspteroapi_1.Client(s.config.pteroHost,n,void 0,!0).testAPI(!1),o=s.embed({},{settings:t});i?(s.userSettings.set(`${e.guild?.id}|${e.user.id}`,n,"token"),o.setTitle(s.t("userconf.token_set"))):o.setTitle(s.t("userconf.token_invalid")),await e.editReply({embeds:[o]})}}else{let i=!1;const n=s.userSettings.get(`${e.guild?.id}|${e.user.id}`);n&&(i=await new jspteroapi_1.Client(s.config.pteroHost,n.token,void 0,!0).testAPI(!1));const o=s.embed({title:s.t("userconf.settings"),fields:[{name:s.t("userconf.token"),value:i?s.t("common:valid"):n?s.t("common:invalid"):s.t("userconf.not_set")}]},{settings:t});await e.editReply({embeds:[o]})}};exports.cmd=(new Command_1.Command).setName("userconf").setDescription("userconf.main").setRun(run).setPermNameClient("unavailable").addStringOption((e=>e.setName("token").setDescription("userconf.client_token")));