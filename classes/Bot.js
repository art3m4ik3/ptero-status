"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Bot=void 0;const enmap_1=__importDefault(require("enmap")),discord_js_1=require("discord.js"),promises_1=require("node:fs/promises"),defaultSettings_1=require("../config/defaultSettings"),Functions_1=require("../modules/Functions"),handleExceptions_1=require("../modules/handleExceptions"),Logger_1=require("../modules/Logger"),express_1=__importDefault(require("express")),i18next_1=__importDefault(require("i18next")),i18next_fs_backend_1=__importDefault(require("i18next-fs-backend")),node_path_1=require("node:path"),Load_1=require("../modules/Load"),Paginate_1=require("../modules/Paginate");class Bot{constructor(e){this.config=e,this.commands=new enmap_1.default,this.liveNodes=new enmap_1.default,this.liveServerIntervals=new Map,this.settings=new enmap_1.default("settings",{autoEnsure:defaultSettings_1.defaultGuildSettings}),this.userSettings=new enmap_1.default("userSettings",{autoEnsure:defaultSettings_1.defaultUserSettings}),this.levelCache={},this.liveNodeCache={},this.functions=new Functions_1.Functions(this),this.pagination=new Paginate_1.Paginate(this),this.logger=new Logger_1.Logger,this.t=(e,s)=>this.trans(`cmds:${e}`,s??[]),this.e=(e,s)=>{const t=this.trans(`embeds:${e}`,s??[]);return t[0].toUpperCase()+t.slice(1)},this.start=async()=>{this.languages=(await(0,promises_1.readdir)((0,node_path_1.join)(__dirname,"../locales/"),{withFileTypes:!0})).filter((e=>e.isDirectory())).map((e=>e.name)),0===this.languages.length&&(this.logger.error("No languages found!"),process.exit(1)),this.discordClient=new discord_js_1.Client({intents:[discord_js_1.GatewayIntentBits.GuildMessages,discord_js_1.GatewayIntentBits.Guilds,discord_js_1.GatewayIntentBits.DirectMessages,discord_js_1.GatewayIntentBits.MessageContent,this.config.whmcsEnabled?discord_js_1.GatewayIntentBits.GuildMembers:0]}),this.i18=i18next_1.default.use(i18next_fs_backend_1.default),this.trans=await this.i18.init({debug:!1,ns:["cmds","embeds"],fallbackLng:"en-us",lowerCaseLng:!0,interpolation:{escapeValue:!1},backend:{loadPath:(0,node_path_1.join)(__dirname,"../locales/{{lng}}/{{ns}}.json")}}),this.i18.loadLanguages(this.languages),this.express=(0,express_1.default)(),this.express.use(express_1.default.json()),(0,handleExceptions_1.handleExceptions)(this);for(const e of this.config.permLevels)this.levelCache[e.name]=e.level;const e=await(0,promises_1.readdir)(`${__dirname}/../commands`),s=await(0,promises_1.readdir)(`${__dirname}/../events`),t=new Load_1.Load(this);if(await t.loadGlobals().catch((e=>this.logger.error(e))),e.forEach((e=>{t.loadCommand(e.split(".")[0])})),s.forEach((e=>t.loadEvent(e.split(".")[0]))),this.config.whmcsEnabled||this.config.liveNodeEnabled){(await(0,promises_1.readdir)(`${__dirname}/../routes`)).forEach((e=>t.loadRoute(e.split(".")[0]))),this.expressServer=this.express.listen(this.config.serverPort,"0.0.0.0",(()=>this.logger.ready(`API server running on port ${this.config.serverPort}`)))}await this.discordClient.login(this.config.discordToken)}}updateLiveNodeCache(e){e.forEach((e=>{const s=this.functions.getSettings(e);for(const t of s.liveNodes)this.liveNodeCache[t.token]={...t,guildId:e.id}}))}embed(e,s){return new discord_js_1.EmbedBuilder(e).setColor(s?.settings?.embedColor??s?.embedColor??"#4682B4").setTimestamp(Date.now())}}exports.Bot=Bot;