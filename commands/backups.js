"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.cmd=void 0;const discord_js_1=require("discord.js"),Command_1=require("../classes/Command"),backup_1=require("../embeds/backup"),run=async(e,{bot:t,interaction:a,settings:s,client:c})=>{const o=await c.getAllBackups(e.identifier);if(0===o.length)return t.functions.handleNoResult(a,s,t.t("not_found.backup"));const u=await Promise.all(o.map((async({attributes:a})=>(0,backup_1.makeBackupEmbed)(t,s,e,a)))),i=new discord_js_1.ButtonBuilder({customId:"createBackup",style:discord_js_1.ButtonStyle.Success}).setLabel(t.t("backups.create")),d=new discord_js_1.ButtonBuilder({customId:"downloadBackup",style:discord_js_1.ButtonStyle.Success}).setLabel(t.t("backups.download")),n=new discord_js_1.ButtonBuilder({customId:"deleteBackup",style:discord_js_1.ButtonStyle.Danger}).setLabel(t.t("backups.delete")).setDisabled(o[0].attributes.is_locked),r=(new discord_js_1.ActionRowBuilder).addComponents([i,d,n]),l=new discord_js_1.ButtonBuilder({customId:"restoreBackup",style:discord_js_1.ButtonStyle.Success}).setLabel(t.t("backups.restore")),k=new discord_js_1.ButtonBuilder({customId:"toggleLockBackup",style:o[0].attributes.is_locked?discord_js_1.ButtonStyle.Danger:discord_js_1.ButtonStyle.Success}).setLabel(o[0].attributes.is_locked?t.t("backups.unlock"):t.t("backups.lock")),b=(new discord_js_1.ActionRowBuilder).addComponents([l,k]);await t.pagination.paginate(a,u,[r,b],(async(i,d,{refreshEmbed:l,row:p})=>{try{const{value:_}=i,m=async(a,i)=>{const d=i??await c.getBackupInfo(e.identifier,o[a].attributes.uuid);d.is_locked?(n.setDisabled(!0),k.setStyle(discord_js_1.ButtonStyle.Danger),k.setLabel(t.t("backups.unlock"))):(n.setDisabled(!1),k.setStyle(discord_js_1.ButtonStyle.Success),k.setLabel(t.t("backups.lock"))),u[a]=(0,backup_1.makeBackupEmbed)(t,s,e,d)};switch(d.customId){case"refresh":await m(_),await l(d);break;case"deleteBackup":await c.deleteBackup(e.identifier,o[_].attributes.uuid),o.splice(_,1),u.splice(_,1),0==u.length?(n.setDisabled(!0),b.components.forEach((e=>e.setDisabled(!0))),p.components.forEach((e=>e.setDisabled(!0))),t.functions.handleNoResult(a,s,t.t("not_found.backup"),"",[r,p])):(i.value=0,await m(i.value,o[i.value].attributes),await l(d));break;case"createBackup":{const a=await c.createBackup(e.identifier);o.push({object:"backup",attributes:a}),u[o.length-1]=(0,backup_1.makeBackupEmbed)(t,s,e,a),i.value=o.length-1,n.data.disabled&&(n.setDisabled(!1),b.components.forEach((e=>e.setDisabled(!1))),p.components.forEach((e=>e.setDisabled(!1)))),await m(i.value,o[o.length-1].attributes),await l(d);break}case"toggleLockBackup":{const t=await c.toggleLockBackup(e.identifier,o[_].attributes.uuid);await m(_,t),await l(d);break}case"downloadBackup":{const a=await c.getBackupDownloadLink(e.identifier,o[_].attributes.uuid);d.followUp({embeds:[t.embed({title:o[_].attributes.name,url:a},{settings:s})],ephemeral:!0});break}case"next":case"back":await t.pagination.updateNextBack(m,d.customId,_,u.length)}}catch(e){await t.functions.handleError(a,s,e,!0)}}),(e=>"createBackup"===e.customId||"deleteBackup"===e.customId||"restoreBackup"===e.customId||"toggleLockBackup"===e.customId||"downloadBackup"===e.customId),!0)};exports.cmd=(new Command_1.CommandWithClientServer).setName("backups").setDescription("backups.main").setCategory("pterodactyl").setRun(run);